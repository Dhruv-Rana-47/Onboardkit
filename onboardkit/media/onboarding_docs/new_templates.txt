----------------------------------------base.html---------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OnboardKit - {% block title %}{% endblock %}</title>
    <script src="https://unpkg.com/htmx.org@1.9.6"></script>
<script src="https://unpkg.com/sortablejs@1.15.0"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    {% block extra_css %}{% endblock %}
</head>
<body>
    {% include 'partials/navbar.html' %}
    
    <div class="container-fluid">
        <div class="row">
            {% include 'partials/sidebar.html' %}
            
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4">
                {% include 'partials/messages.html' %}
                {% block content %}{% endblock %}
            </main>
        </div>
    </div>
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this item? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteForm" method="POST">
                        {% csrf_token %}
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    {% block extra_js %}{% endblock %}
    <script>
// Activate modals for all delete buttons
document.addEventListener('DOMContentLoaded', function() {
    const deleteButtons = document.querySelectorAll('[data-bs-toggle="modal"]');
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const form = this.closest('form');
            document.getElementById('deleteForm').action = form.action;
        });
    });
});
</script>

</body>
</html>
------------------------------------------------------------navbar.html-------------------------
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="{% url 'dashboard' %}">
            <i class="bi bi-people-fill"></i> OnboardKit
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                {% if user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'dashboard' %}">Dashboard</a>
                    </li>
                    {% if user.role and user.role.name == 'ADMIN' %}
                        <li class="nav-item">
                            <a class="nav-link" href="{% url 'accounts:user_list' %}">User Management</a>
                        </li>
                    {% endif %}
                {% endif %}
            </ul>
            <ul class="navbar-nav">
                {% if user.is_authenticated %}
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="bi bi-person-circle"></i> {{ user.get_full_name }}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="#">Profile</a></li>
                            <li><hr class="dropdown-divider"></li>
                            
                           <li>
    <form method="post" action="{% url 'logout' %}" style="display: inline;">
        {% csrf_token %}
        <button type="submit" class="dropdown-item">Logout</button>
    </form>
</li>

                        </ul>
                    </li>
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'login' %}">Login</a>
                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</nav>
--------------------------------------------------------------pagination.html------------------<div class="pagination">
    <span class="step-links">
        {% if page_obj.has_previous %}
            <a href="?page=1" class="btn btn-sm btn-outline-primary">&laquo; first</a>
            <a href="?page={{ page_obj.previous_page_number }}" class="btn btn-sm btn-outline-primary">previous</a>
        {% endif %}

        <span class="current">
            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}
        </span>

        {% if page_obj.has_next %}
            <a href="?page={{ page_obj.next_page_number }}" class="btn btn-sm btn-outline-primary">next</a>
            <a href="?page={{ page_obj.paginator.num_pages }}" class="btn btn-sm btn-outline-primary">last &raquo;</a>
        {% endif %}
    </span>
</div>--------------------------
---------------------------------------------sidebar.html=----------------------
<div class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
    <div class="position-sticky pt-3">
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="{% url 'dashboard' %}">
                    <i class="bi bi-speedometer2"></i> Dashboard
                </a>
            </li>
            {% if user.role and user.role.name == 'ADMIN' %}
                <li class="nav-item">
                    <a class="nav-link" href="{% url 'accounts:user_list' %}">
                        <i class="bi bi-people"></i> User Management
                    </a>
                </li>
                
                <li class="nav-item">
                    <a class="nav-link" href="{% url 'accounts:role_management' %}">
                        <i class="bi bi-person"></i> Role Management
                    </a>
                </li>
            {% endif %}
            {% if user.role == 'SENIOR' %}
                <li class="nav-item">
                    <a class="nav-link" href="{% url 'onboarding:template_list' %}">
                        <i class="bi bi-file-earmark-text"></i> Templates
                    </a>
                </li>
            {% endif %}
            <li class="nav-item">
                <a class="nav-link" href="{% url 'messaging:inbox' %}">
                    <i class="bi bi-envelope"></i> Messages
                    {% if user.unread_messages_count > 0 %}
                        <span class="badge bg-danger rounded-pill">{{ user.unread_messages_count }}</span>
                    {% endif %}
                </a>
            </li>
        </ul>
    </div>
</div>
------------------------------------------------------------

--------------------------------Admin dashboard-----------------------------------------
{% extends 'base.html' %}
{% load humanize %}

{% block title %}Admin Dashboard{% endblock %}

{% block content %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Admin Dashboard</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="{% url 'accounts:add_user' %}" class="btn btn-sm btn-success">
                <i class="bi bi-person-plus"></i> Add User
            </a>
            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Users</h5>
                <p class="card-text display-4">{{ users.count }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <h5 class="card-title">Active Users</h5>
                <p class="card-text display-4">{{ active_users }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">Unread Messages</h5>
                <p class="card-text display-4">{{ unread_messages }}</p>
            </div>
        </div>
    </div>
</div>

<h3>Recent Users</h3>
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Role</th>
                <th>Joined</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for user in users|slice:":5" %}
            <tr>
                <td>{{ user.get_full_name }}</td>
                <td>
                    <span class="badge bg-{% if user.role == 'ADMIN' %}danger{% elif user.role == 'SENIOR' %}warning{% else %}primary{% endif %}">
                        {{ user.get_role_display }}
                    </span>
                </td>
                <td>{{ user.date_joined|date:"M d, Y" }}</td>
                <td>
                    {% if user.is_active %}
                        <span class="badge bg-success">Active</span>
                    {% else %}
                        <span class="badge bg-secondary">Inactive</span>
                    {% endif %}
                </td>
                <td>
                    <a href="{% url 'accounts:user_detail' user.pk %}" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View
                    </a>
                    <a href="{% url 'accounts:edit_user' user.pk %}" class="btn btn-sm btn-outline-warning">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                    <a href="{% url 'accounts:delete_user' user.pk %}" class="btn btn-sm btn-outline-danger">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% endblock %}
-----------------------------------------------------------------junior.html-------------------------{% extends 'base.html' %}

{% block title %}My Dashboard{% endblock %}

{% block content %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">My Dashboard</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Help</button>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">My Progress</h5>
                <div class="d-flex align-items-center">
                    <div class="progress w-100 me-3" style="height: 30px;">
                        <div class="progress-bar progress-bar-striped" role="progressbar" 
                             style="width: {{ progress }}%" aria-valuenow="{{ progress }}" 
                             aria-valuemin="0" aria-valuemax="100">{{ progress }}%
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-warning mb-3">
            <div class="card-body">
                <h5 class="card-title">Pending Tasks</h5>
                <p class="card-text display-4">{{ pending_tasks.count }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">My Mentor</h5>
                <p class="card-text">
                    {% if mentor %}
                        {{ mentor.get_full_name }}
                    {% else %}
                        Not assigned
                    {% endif %}
                </p>
            </div>
        </div>
    </div>
</div>

<h3>My Tasks</h3>
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Task</th>
                <th>Status</th>
                <th>Due Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for task in tasks %}
            <tr>
                <td>{{ task.get_task_title }}</td>
                <td>
                    <span class="badge bg-{% if task.status == 'COMPLETED' %}success{% elif task.status == 'IN_PROGRESS' %}warning{% else %}secondary{% endif %}">
                        {{ task.get_status_display }}
                    </span>
                </td>
                <td>{{ task.due_date|date:"M d, Y"|default:"-" }}</td>
                <td>
                    <a href="{% url 'onboarding:task_detail' task.pk %}" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View
                    </a>
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% endblock %}  <!-- THIS WAS MISSING -->-------------------------------------------------------------------mentor.html-----------------------------{% extends 'base.html' %}
{% load humanize %}

{% block title %}Mentor Dashboard{% endblock %}

{% block content %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Mentor Dashboard</h1>
</div>
<div class="btn-toolbar mb-3">
    <div class="btn-group me-2">
        <a href="{% url 'messaging:compose_message' %}" class="btn btn-sm btn-outline-primary">
            <i class="bi bi-envelope-plus"></i> New Message
        </a>
        <a href="{% url 'onboarding:template_create' %}" class="btn btn-sm btn-outline-success">
            <i class="bi bi-file-earmark-plus"></i> New Template
        </a>

        <a href="{% url 'onboarding:task_create' %}" class="btn btn-sm btn-outline-info">
            <i class="bi bi-plus-circle"></i> New Task
        </a>
         <a href="{% url 'onboarding:task_list' %}" class="btn btn-primary">
                <i class="bi bi-list-task"></i> View All Tasks
            </a>
    </div>
</div>
<div class="row mb-3">
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">Mentees</h5>
                <p class="card-text display-4">{{ mentees.count }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning mb-3">
            <div class="card-body">
                <h5 class="card-title">Pending Tasks</h5>
                <p class="card-text display-4">{{ pending_tasks.count }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">Templates</h5>
                <p class="card-text display-4">{{ templates.count }}</p>
            </div>
        </div>
    </div>
    <div class="col-md-3"> <!-- Change all cols to md-3 -->
        <div class="card text-white bg-danger mb-3">
            <div class="card-body">
                <h5 class="card-title">Unread Messages</h5>
                <p class="card-text display-4">{{ unread_messages }}</p>
                <!-- <small class="opacity-75">Since {{ last_login|date:"M d" }}</small> -->
            </div>
        </div>
    </div>
</div>
<!-- templates/dashboard/mentor_dashboard.html -->
<div class="list-group">
  {% for mentee in mentees %}
  <div class="list-group-item">
    <div class="d-flex align-items-center">
      <!-- Profile Picture -->
      <img src="{{ mentee.profile.avatar.url|default:'/static/default-avatar.png' }}" 
           class="rounded-circle me-3" 
           width="60" 
           alt="{{ mentee.username }}">
      
      <!-- Profile Details -->
      <div class="flex-grow-1">
        <h5>{{ mentee.get_full_name }}</h5>
        <p class="text-muted mb-1">{{ mentee.profile.department }}</p>
        <p class="small">{{ mentee.profile.bio|truncatechars:100 }}</p>
        
        <!-- Progress Bar -->
        <div class="progress mt-2" style="height: 8px;">
          <div class="progress-bar" style="width: {{ mentee.task_progress }}%"></div>
        </div>
      </div>
      
      <!-- Actions -->
      <div class="btn-group">
        <a href="{% url 'messaging:compose_message' %}?to={{ mentee.id }}" 
           class="btn btn-sm btn-outline-primary">
          <i class="bi bi-envelope"></i>
        </a>
      </div>
    </div>
  </div>
  {% endfor %}
</div>
<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Task</th>
                <th>Mentee</th>
                <th>Due</th>
                <th>Priority</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for task in pending_tasks %}
            <tr class="{% if task.is_overdue %}table-danger{% endif %}">
                <td>
                    <a href="{% url 'onboarding:task_detail' task.pk %}">
                        {{ task.get_task_title|truncatechars:30 }}
                    </a>
                </td>
                <td>{{ task.user.first_name }}</td>
                <td>{{ task.due_date|date:"M d"|default:"-" }}</td>
                <td>
                    <span class="badge bg-{% if task.priority == 'HIGH' %}danger{% else %}warning{% endif %}">
                        {{ task.get_priority_display }}
                    </span>
                </td>
                <td>
                    <a href="{% url 'messaging:compose_message' %}?task={{ task.pk }}" class="btn btn-sm btn-outline-secondary"
                        title="Send reminder">
                        <i class="bi bi-bell"></i>
                    </a>
                </td>
            </tr>
            {% empty %}
            <tr>
                <td colspan="5" class="text-center text-muted">No pending tasks</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
</div>
{% endblock %}
{% block scripts %}
<script>
    // Task reminder tooltips
    document.querySelectorAll('[title^="Send reminder"]').forEach(el => {
        new bootstrap.Tooltip(el);
    });

    // Auto-refresh dashboard every 5 minutes
    setTimeout(() => { location.reload() }, 300000);
</script>
{% endblock %}----------------------------------------------------------------------  new dashboard page >>common_dashboard.html-----------------------------------{% extends 'base.html' %}
{% load humanize %}

{% block title %}My Dashboard{% endblock %}

{% block content %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">My Dashboard</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        {% if 'create_template' in authorities %}
        <a href="{% url 'onboarding:template_create' %}" class="btn btn-sm btn-outline-success me-2">
            <i class="bi bi-file-earmark-plus"></i> New Template
        </a>
        {% endif %}
        {% if 'create_task' in authorities %}
        <a href="{% url 'onboarding:task_create' %}" class="btn btn-sm btn-outline-info me-2">
            <i class="bi bi-plus-circle"></i> New Task
        </a>
        {% endif %}
        {% if 'view_all_tasks' in authorities %}
        <a href="{% url 'onboarding:task_list' %}" class="btn btn-sm btn-outline-dark me-2">
            <i class="bi bi-list-task"></i> View All Tasks
        </a>
        {% endif %}
        <a href="{% url 'messaging:compose_message' %}" class="btn btn-sm btn-outline-primary">
            <i class="bi bi-envelope-plus"></i> New Message
        </a>
    </div>
</div>

<div class="row mb-4">
    {% if 'view_progress' in authorities %}
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">My Progress</h5>
                <div class="progress" style="height: 30px;">
                    <div class="progress-bar progress-bar-striped" role="progressbar"
                         style="width: {{ progress|default:0 }}%" aria-valuenow="{{ progress|default:0 }}"
                         aria-valuemin="0" aria-valuemax="100">{{ progress|default:0 }}%</div>
                </div>
            </div>
        </div>
    </div>
    {% endif %}

    {% if 'view_tasks' in authorities %}
    <div class="col-md-3">
        <div class="card text-white bg-warning mb-3">
            <div class="card-body">
                <h5 class="card-title">Pending Tasks</h5>
                <p class="card-text display-4">{{ pending_task_count|default:0 }}</p>
            </div>
        </div>
    </div>
    {% endif %}

    <div class="col-md-3">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">My Mentor</h5>
                <p class="card-text">
                    {% if mentor %}
                        {{ mentor.get_full_name }}
                    {% else %}
                        Not assigned
                    {% endif %}
                </p>
            </div>
        </div>
    </div>

    {% if 'view_hierarchy' in authorities %}
    <div class="col-md-3">
        <div class="card text-white bg-secondary mb-3">
            <div class="card-body">
                <h5 class="card-title">Mentees</h5>
                <p class="card-text display-4">{{ mentees.count|default:0 }}</p>
            </div>
        </div>
    </div>
    {% endif %}

    <div class="col-md-3">
        <div class="card text-white bg-danger mb-3">
            <div class="card-body">
                <h5 class="card-title">Unread Messages</h5>
                <p class="card-text display-4">{{ unread_messages|default:0 }}</p>
            </div>
        </div>
    </div>
</div>

{% if 'view_templates' in authorities and templates %}
    {% if templates|length > 0 %}
        <h3>Templates</h3>
        <div class="table-responsive mb-4">
            <table class="table table-hover">
                <thead>
                    <tr><th>Template</th><th>Created</th></tr>
                </thead>
                <tbody>
                    {% for t in templates %}
                    <tr>
                        <td><a href="{% url 'onboarding:template_detail' t.pk %}">{{ t.title }}</a></td>
                        <td>{{ t.created_at|naturaltime }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {% endif %}
{% endif %}

{% if 'view_tasks' in authorities and tasks %}
<h3>My Tasks</h3>
<div class="table-responsive mb-4">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Task</th><th>Status</th><th>Due</th><th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for task in tasks %}
            <tr class="{% if task.is_overdue %}table-danger{% endif %}">
                <td>{{ task.title }}</td>
                <td>
                    {% if task.status == "COMPLETED" %}
                        <span class="badge bg-success">{{ task.get_status_display }}</span>
                    {% elif task.status == "IN_PROGRESS" %}
                        <span class="badge bg-warning">{{ task.get_status_display }}</span>
                    {% else %}
                        <span class="badge bg-secondary">{{ task.get_status_display }}</span>
                    {% endif %}
                </td>
                <td>{{ task.due_date|date:"M d, Y"|default:"-" }}</td>
                <td>
                    <a href="{% url 'onboarding:task_detail' task.pk %}" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View
                    </a>
                    {% if 'edit_task' in authorities %}
                    <a href="{% url 'onboarding:task_edit' task.pk %}" class="btn btn-sm btn-outline-warning">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                    {% endif %}
                    {% comment %} {% if 'complete_task' in authorities and task.status != "COMPLETED" %}
                    <a href="{% url 'onboarding:task_complete' task.pk %}" class="btn btn-sm btn-outline-success">
                        <i class="bi bi-check-circle"></i> Complete
                    </a>
                    {% endif %} {% endcomment %}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% endif %}

{% if 'view_hierarchy' in authorities %}
<h3 class="mt-4">My Mentees</h3>
<div class="list-group mb-4">
    {% for mentee in mentees %}
    <div class="list-group-item">
        <div class="d-flex align-items-center">
            <img src="{{ mentee.profile.avatar.url|default:'/static/default-avatar.png' }}" class="rounded-circle me-3" width="60" alt="{{ mentee.username }}">
            <div class="flex-grow-1">
                <h5>{{ mentee.get_full_name }}</h5>
                <p class="text-muted mb-1">{{ mentee.profile.department }}</p>
                <p class="small">{{ mentee.profile.bio|truncatechars:100 }}</p>
                <div class="progress mt-2" style="height: 8px;">
                    <div class="progress-bar" style="width: {{ mentee.task_progress|default:"0" }}%"></div>
                </div>
            </div>
            <div class="btn-group">
                <a href="{% url 'messaging:compose_message' %}?to={{ mentee.id }}" class="btn btn-sm btn-outline-primary">
                    <i class="bi bi-envelope"></i>
                </a>
            </div>
        </div>
    </div>
    {% empty %}
    <p class="text-muted">No mentees assigned to you.</p>
    {% endfor %}
</div>

<h3>Mentees' Tasks</h3>
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Task</th><th>Mentee</th><th>Due</th><th>Priority</th><th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for task in mentee_tasks %}
            <tr class="{% if task.is_overdue %}table-danger{% endif %}">
                <td>{{ task.title }}</td>
                <td>{{ task.assignee.get_full_name }}</td>
                <td>{{ task.due_date|date:"M d, Y"|default:"-" }}</td>
                <td>
                    <span class="badge bg-{% if task.priority == 'HIGH' %}danger{% else %}warning{% endif %}">
                        {{ task.get_priority_display }}
                    </span>
                </td>
                <td>
                    <a href="{% url 'onboarding:task_detail' task.pk %}" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View
                    </a>
                    <a href="{% url 'messaging:compose_message' %}?task={{ task.pk }}" class="btn btn-sm btn-outline-secondary" title="Send reminder">
                        <i class="bi bi-bell"></i>
                    </a>
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% endif %}
{% endblock %}

{% block scripts %}
<script>
    document.querySelectorAll('[title^="Send reminder"]').forEach(el => {
        new bootstrap.Tooltip(el);
    });

    setTimeout(() => { location.reload(); }, 300000); // Auto-refresh every 5 minutes
</script>
{% endblock %}
---------------------------------------------------------------  view.py -------------------------from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required, user_passes_test
from django.contrib.auth import login, get_user_model
from django.contrib import messages
from django_filters.views import FilterView
from django.db.models import Q
from .models import User, Role
from .forms import UserRegistrationForm, UserEditForm, RoleForm
from onboarding.models import OnboardingTemplate, UserTask
from messaging.models import Message
    
from django_tables2 import SingleTableView
from django_filters.views import FilterView
from .tables import UserTable  # You'll need to create this
from .filters import UserFilter
from django.http import HttpResponse


from .filters import RoleFilter
from django_tables2 import RequestConfig

from .tables import RoleTable
from django_tables2 import RequestConfig

# Admin User Management
def is_admin(user):
    return user.role and user.role.name.upper() == 'ADMIN'

# Authentication Views
@login_required
@user_passes_test(is_admin)
def register(request):
    if request.method == 'POST':
        form = UserRegistrationForm(request.POST)
        if form.is_valid():
            user = form.save()
            
            # Set user role based on form data
            role = form.cleaned_data.get('role')
            user.role = role
            user.save()
            
            # For junior users, assign mentor
            if role == 'JUNIOR':
                mentor = form.cleaned_data.get('mentor')
                user.mentor = mentor
                user.save()
            
            login(request, user)
            messages.success(request, 'Registration successful!')
            return redirect('dashboard')
    else:
        form = UserRegistrationForm()
    return render(request, 'auth/register.html', {'form': form})

# Dashboard View (keep your existing version)

@login_required
def dashboard(request):
    
    user = request.user

    # ✅ Admin dashboard
    if user.is_admin():
        users = User.objects.all().order_by('-date_joined')
        recent_tasks = UserTask.objects.all().order_by('-assigned_date')[:5]
        unread_messages = Message.objects.filter(recipient=user, read_at__isnull=True).count()
        return render(request, 'dashboard/admin_dashboard.html', {
            'users': users,
            'recent_tasks': recent_tasks,
            'unread_messages': unread_messages,
        })

    # ✅ Authority-based context
    authorities = set(user.role.authorities.values_list('code', flat=True))
    context = {
        'user': user,
        'authorities': authorities,
        'unread_messages': Message.objects.filter(recipient=user, read_at__isnull=True).count(),
    }

    # ✅ My Mentor
    if 'view_mentor_info' in authorities:
        context['mentor'] = user.mentor if hasattr(user, 'mentor') else None

    # ✅ Mentees (for mentors/seniors)
    mentees = []
    if 'view_hierarchy' in authorities:
        mentees = User.objects.filter(mentor=user, role__name='JUNIOR')
        for mentee in mentees:
            tasks = UserTask.objects.filter(user=mentee)
            total = tasks.count()
            completed = tasks.filter(status='COMPLETED').count()
            mentee.task_progress = int((completed / total) * 100) if total else 0
        context['mentees'] = mentees

    # ✅ My Tasks
    user_tasks = UserTask.objects.filter(user=user)
    if 'view_tasks' in authorities:
        context['tasks'] = user_tasks
        context['pending_task_count'] = user_tasks.exclude(status='COMPLETED').count()
        context['completed_task_count'] = user_tasks.filter(status='COMPLETED').count()

    # ✅ Mentees' Tasks (if mentor/senior)
    if 'view_hierarchy' in authorities:
        mentee_users = User.objects.filter(mentor=user)
        mentee_tasks = UserTask.objects.filter(user__in=mentee_users).select_related('user')
        context['mentee_tasks'] = mentee_tasks

    # ✅ Templates
    if 'view_templates' in authorities:
        context['templates'] = OnboardingTemplate.objects.filter(created_by=user)

    # ✅ Progress (user's own task completion)
    if 'view_progress' in authorities:
        total_tasks = user_tasks.count()
        completed_tasks = user_tasks.filter(status='COMPLETED').count()
        context['progress'] = int((completed_tasks / total_tasks) * 100) if total_tasks else 0

    print(context)

    return render(request, 'dashboard/common_dashboard.html', context)




class UserListView(FilterView, SingleTableView):
    model = User
    template_name = 'accounts/user_list.html'
    filterset_class = UserFilter
    table_class = UserTable
    paginate_by = 10

    def get_queryset(self):
        return super().get_queryset().order_by('-date_joined')

@login_required
def add_user(request):
    if not request.user.role.has_authority('create_user'):
        return HttpResponse("Unauthorized", status=403)

    if request.method == 'POST':
        form = UserRegistrationForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            if form.cleaned_data.get('role') and form.cleaned_data['role'].name == 'JUNIOR':
                user.mentor = form.cleaned_data.get('mentor')
            user.save()
            messages.success(request, f'User {user.username} created successfully!')
            return redirect('accounts:user_list')
    else:
        form = UserRegistrationForm()
    
    return render(request, 'accounts/add_user.html', {'form': form})


@login_required
# @user_passes_test(is_admin)
def user_detail(request, pk):
    user = get_object_or_404(User, pk=pk)
    tasks = user.tasks.all().order_by('-assigned_date')
    
    total_tasks = tasks.count()
    completed_tasks = tasks.filter(status='COMPLETED').count()
    progress = int((completed_tasks / total_tasks) * 100) if total_tasks > 0 else 0
    
    return render(request, 'accounts/user_detail.html', {
        'user': user,
        'tasks': tasks,
        'progress': progress,
    })

@login_required
# @user_passes_test(is_admin)
def edit_user(request, pk):
    user = get_object_or_404(User, pk=pk)
    if request.method == 'POST':
        form = UserEditForm(request.POST, instance=user)
        if form.is_valid():
            form.save()
            messages.success(request, f'User {user.username} updated successfully!')
            return redirect('accounts:user_detail', pk=user.pk)
    else:
        form = UserEditForm(instance=user)
    return render(request, 'accounts/edit_user.html', {'form': form, 'user': user})

@login_required
# @user_passes_test(is_admin)
def delete_user(request, pk):
    user = get_object_or_404(User, pk=pk)
    if request.method == 'POST':
        username = user.username
        user.delete()
        messages.success(request, f'User {username} deleted successfully!')
        return redirect('accounts:user_list')
    return render(request, 'accounts/delete_user.html', {'user': user})



@login_required
@user_passes_test(is_admin)
def role_management(request):
    roles = Role.objects.all().order_by('-created_at')
    role_filter = RoleFilter(request.GET, queryset=roles)
    table = RoleTable(role_filter.qs)
    RequestConfig(request, paginate={"per_page": 10}).configure(table)

    if request.method == 'POST':
        form = RoleForm(request.POST)
        if form.is_valid():
            form.save()
            messages.success(request, 'Role added successfully!')
            return redirect('accounts:role_management')
    else:
        form = RoleForm()

    return render(request, 'accounts/role_management.html', {
        'form': form,
        'filter': role_filter,
        'table': table
    })




@login_required
@user_passes_test(is_admin)
def add_role(request):
    if request.method == 'POST':
        form = RoleForm(request.POST)
        if form.is_valid():
            form.save()
            messages.success(request, 'Role created successfully!')
            return redirect('accounts:role_management')
    else:
        form = RoleForm()
    
    return render(request, 'accounts/add_role.html', {'form': form})    

@login_required
@user_passes_test(is_admin)
def edit_role(request, pk):
    role = get_object_or_404(Role, pk=pk)
    if request.method == 'POST':
        form = RoleForm(request.POST, instance=role)
        if form.is_valid():
            form.save()
            return redirect('accounts:role_management')
    else:
        form = RoleForm(instance=role)
    return render(request, 'accounts/edit_role.html', {'form': form, 'role': role})


@login_required
@user_passes_test(is_admin)
def delete_role(request, pk):
    role = get_object_or_404(Role, pk=pk)
    if request.method == 'POST':
        role.delete()
        return redirect('accounts:role_management')
    return render(request, 'accounts/delete_role.html', {'role': role})-----------------------------------------------------forms.py ----------------------------------from django import forms
from django.contrib.auth.forms import UserCreationForm, UserChangeForm
from django.contrib.auth import get_user_model
from .models import User,Role, Authority

class UserRegistrationForm(UserCreationForm):
    role = forms.ModelChoiceField(queryset=Role.objects.all(), empty_label="Select Role")
    mentor = forms.ModelChoiceField(
        queryset=User.objects.filter(role__name='SENIOR'),
        required=False,
        label="Assign Mentor (for interns)"
    )

    class Meta:
        model = User
        fields = ('username', 'email', 'first_name', 'last_name', 'role', 'mentor', 'password1', 'password2')

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['mentor'].widget.attrs.update({'class': 'select2'})

    def clean(self):
        cleaned_data = super().clean()
        role = cleaned_data.get('role')
        mentor = cleaned_data.get('mentor')
        if role and role.name == 'JUNIOR' and not mentor:
            raise forms.ValidationError("Mentor is required for junior roles")


class UserEditForm(forms.ModelForm):
    class Meta:
        model = User
        fields = ('username', 'email', 'first_name', 'last_name', 'role', 'is_active', 'mentor')

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['mentor'].queryset = User.objects.filter(role__name='Senior')
        if not self.instance.role or self.instance.role.name != 'Junior':
            self.fields['mentor'].widget = forms.HiddenInput()

class UserFilterForm(forms.Form):
    role = forms.ModelChoiceField(queryset=Role.objects.all(), required=False, empty_label='All Roles')
    search = forms.CharField(required=False, widget=forms.TextInput(attrs={'placeholder': 'Search users...'}))

class RoleForm(forms.ModelForm):
    authorities = forms.ModelMultipleChoiceField(
        queryset=Authority.objects.all(),
        widget=forms.CheckboxSelectMultiple,
        required=False,
        label="Authorities"
    )

    class Meta:
        model = Role
        fields = ['name', 'report_to', 'authorities', 'description']---------------------------------------------------------------------------------------------------------from django.contrib.auth.models import AbstractUser
from django.db import models

from django.db import models
from django.contrib.auth.models import AbstractUser

class Authority(models.Model):
    code = models.CharField(max_length=100, unique=True)
    label = models.CharField(max_length=255)

    def __str__(self):
        return self.label

class Role(models.Model):
    name = models.CharField(max_length=50, unique=True)
    report_to = models.ForeignKey('self', null=True, blank=True, on_delete=models.SET_NULL, related_name='sub_roles')
    authorities = models.ManyToManyField(Authority, blank=True)
    description = models.TextField(blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def has_authority(self, code):
        return self.authorities.filter(code=code).exists()

    class Meta:
        verbose_name = 'Role'
        verbose_name_plural = 'Roles'

    def __str__(self):
        return self.name


class User(AbstractUser):
    role = models.ForeignKey(Role, on_delete=models.SET_NULL, null=True, blank=True)
    mentor = models.ForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True)
    join_date = models.DateField(auto_now_add=True)
    profile_picture = models.ImageField(upload_to='profiles/', null=True, blank=True)

    def __str__(self):
        return f"{self.get_full_name()} ({self.role.name if self.role else 'No Role'})"

    def is_admin(self):
        return self.role and self.role.name.upper() == 'ADMIN'

    def is_senior(self):
        return self.role and self.role.name.upper() == 'SENIOR'



class Profile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='profile')
    avatar = models.ImageField(upload_to='avatars/', blank=True)
    bio = models.TextField(blank=True)
    phone = models.CharField(max_length=20, blank=True)
    department = models.CharField(max_length=100, blank=True)

    def __str__(self):
        return f"Profile of {self.user.username}"------------------------------------
